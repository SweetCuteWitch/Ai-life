(()=>{"use strict";const e=document.getElementById("canvas"),t=e.getContext("2d");t.imageSmoothingEnabled=!1;const n=[],o=[],a=(e,n,o,a)=>{t.fillStyle=o,t.fillRect(e,n,a,a)},l=(e,t,o)=>{const a={from:e,to:t,g:o};return n.push(a),a},i=()=>Math.random()*(e.width-30-10)+10,r=()=>{d||n.forEach((t=>((t,n,o)=>{for(let a=0;a<t.length;a++){let l=0,i=0;const r=t[a];for(let e=0;e<n.length;e++){const t=n[e],a=r.x-t.x,d=r.y-t.y,s=Math.sqrt(a*a+d*d);if(s>0&&s<80){const e=-o/s;l+=e*a,i+=e*d}}r.vx=.5*(r.vx+l),r.vy=.5*(r.vy+i),r.x+=r.vx,r.y+=r.vy,(r.x<=0||r.x>=e.width)&&(r.vx*=-1),(r.y<=0||r.y>=e.width)&&(r.vy*=-1)}})(t.from.particles,t.to.particles,t.g))),t.clearRect(0,0,e.width,e.width),a(0,0,"black",e.width),o.forEach((e=>a(e.x,e.y,e.color,e.size))),requestAnimationFrame(r)};let d=!1;const s=document.getElementById("color_input"),c=document.getElementById("number_input"),u=document.getElementById("add"),g=document.getElementById("groups"),m=document.getElementById("rules"),h=document.getElementById("pause"),v=document.getElementById("random");let y="",p=0;const E=[],w=()=>{y=`#${Math.floor(16777215*Math.random()).toString(16)}`,s.value=y,p=Math.floor(600*Math.random()),c.value=p};s.addEventListener("input",(e=>{y=e.target.value})),c.addEventListener("input",(e=>{p=e.target.value,e.target.value>1e3&&(p=1e3,c.value=1e3),e.target.value<0&&(p=0,c.value=0)})),u.addEventListener("click",(()=>{const e=((e,t,n,a)=>{const l=[];for(let n=0;n<e;n++)l.push({x:i(),y:i(),vx:0,vy:0,color:t,size:5});return o.push(...l),{name:a,particles:l}})(p,y,0,E.length);E.push(e),w(),g.innerHTML="",E.forEach((t=>{g.innerHTML+=`\n      <div class="group" style="background: ${t.particles[0].color}">\n        <label style="color: ${t.particles[0].color}">${t.particles.length}</label>\n      </div>\n      `,l(e,t,4*Math.random()-2),e.name!==t.name&&l(t,e,4*Math.random()-2)})),m.innerHTML="",n.forEach((e=>{m.innerHTML+=`\n      <div>\n        <div class="rules_info"> \n          <div class="rules_object" style="background:${e.from.particles[0].color}"></div>\n          <label class="rules_display">${Math.round(1e3*e.g)/1e3}</label>\n          <div class="rules_object" style="background:${e.to.particles[0].color}"></div>\n        </div>\n        <input\n          class="g_input"\n          type="range"\n          min="-2"\n          max="2"\n          value="${e.g}"\n          step="0.001"\n        />\n      </div>`}));const t=document.getElementsByClassName("g_input"),a=document.getElementsByClassName("rules_display");for(let e=0;e<t.length;e++)t[e].addEventListener("input",(t=>{n[e].g=t.target.value,a[e].innerHTML=Math.round(1e3*n[e].g)/1e3}))})),h.addEventListener("click",(()=>{d=!d,h.innerHTML=d?"Continue":"Pause"})),v.addEventListener("click",(()=>{const e=document.getElementsByClassName("rules_display"),t=document.getElementsByClassName("g_input");n.forEach(((n,o)=>{n.g=4*Math.random()-2,e[o].innerHTML=Math.round(1e3*n.g)/1e3,t[o].value=n.g}))}));const M=document.getElementById("canvas");M.getContext("2d").imageSmoothingEnabled=!1,window.onload=()=>{window.innerHeight>window.innerWidth?(M.width=window.innerWidth-10,M.height=window.innerWidth-10):(M.width=window.innerHeight-10,M.height=window.innerHeight-10),document.body.height=window.innerHeight,w(),r()}})();
